#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 4.14
# In conjunction with Tcl version 8.6
#    Jun 05, 2018 10:00:33 PM

import sys

try:
    from Tkinter import *
except ImportError:
    from tkinter import *

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import Menu_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = Tk()
    Menu_support.set_Tk_var()
    top = MediCalc_V1_0 (root)
    Menu_support.init(root, top)
    root.mainloop()

w = None
def create_MediCalc_V1_0(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = Toplevel (root)
    Menu_support.set_Tk_var()
    top = MediCalc_V1_0 (w)
    Menu_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_MediCalc_V1_0():
    global w
    w.destroy()
    w = None


class MediCalc_V1_0:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85' 
        _ana2color = '#d9d9d9' # X11 color: 'gray85' 
        font11 = "-family {DejaVu Sans} -size 20 -weight bold -slant "  \
            "roman -underline 0 -overstrike 0"
        self.style = ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.',background=_bgcolor)
        self.style.configure('.',foreground=_fgcolor)
        self.style.configure('.',font="TkDefaultFont")
        self.style.map('.',background=
            [('selected', _compcolor), ('active',_ana2color)])

        top.geometry("612x452+548+201")
        top.title("MediCalc V1.0")
        top.configure(highlightcolor="black")



        self.style.configure('TNotebook.Tab', background=_bgcolor)
        self.style.configure('TNotebook.Tab', foreground=_fgcolor)
        self.style.map('TNotebook.Tab', background=
            [('selected', _compcolor), ('active',_ana2color)])
        self.nb = ttk.Notebook(top)
        self.nb.place(relx=0.0, rely=0.0, relheight=1.0, relwidth=1.0)
        self.nb.configure(width=612)
        self.nb.configure(takefocus="")
        self.nb_t0 = Frame(self.nb)
        self.img0 = PhotoImage(file='''img/dose16.png''')
        self.nb.add(self.nb_t0, padding=3)
        self.nb.tab(0, text="Dosages", compound="left", underline="-1"
                ,image=self.img0)
        self.nb_t1 = Frame(self.nb)
        self.img1 = PhotoImage(file='''img/conversion16.png''')
        self.nb.add(self.nb_t1, padding=3)
        self.nb.tab(1, text="Conversions", compound="left", underline="-1"
                ,image=self.img1)
        self.nb_t2 = Frame(self.nb)
        self.img2 = PhotoImage(file='''img/bmi16.png''')
        self.nb.add(self.nb_t2, padding=3)
        self.nb.tab(2, text="BMI", compound="left", underline="-1"
                ,image=self.img2)
        self.nb_t3 = Frame(self.nb)
        self.img3 = PhotoImage(file='''img/reference16.png''')
        self.nb.add(self.nb_t3, padding=3)
        self.nb.tab(3, text="References", compound="left", underline="-1"
                ,image=self.img3)
        self.nb_t3.configure(width=1110)
        self.nb_t4 = Frame(self.nb)
        self.img4 = PhotoImage(file='''img/support16.png''')
        self.nb.add(self.nb_t4, padding=3)
        self.nb.tab(4, text="Support", compound="left", underline="-1"
                ,image=self.img4)
        self.nb_t4.configure(width=630)

        self.TNotebook1 = ttk.Notebook(self.nb_t0)
        self.TNotebook1.place(relx=0.0, rely=0.0, relheight=1.01, relwidth=1.0)
        self.TNotebook1.configure(width=612)
        self.TNotebook1.configure(takefocus="")
        self.TNotebook1_t0 = Frame(self.TNotebook1)
        self.TNotebook1.add(self.TNotebook1_t0, padding=3)
        self.TNotebook1.tab(0, text="Solid Medicine", compound="left"
                ,underline="-1", )
        self.TNotebook1_t1 = Frame(self.TNotebook1)
        self.TNotebook1.add(self.TNotebook1_t1, padding=3)
        self.TNotebook1.tab(1, text="Liquid Medicine", compound="left"
                ,underline="-1", )

        self.dose_solid_Dose = Label(self.TNotebook1_t0)
        self.dose_solid_Dose.place(relx=0.43, rely=0.05, height=35, width=82)
        self.dose_solid_Dose.configure(activebackground="#f9f9f9")
        self.dose_solid_Dose.configure(font=font11)
        self.dose_solid_Dose.configure(text='''Dose''')
        self.dose_solid_Dose.configure(width=82)

        self.TEntry2 = ttk.Entry(self.TNotebook1_t0)
        self.TEntry2.place(relx=0.15, rely=0.22, relheight=0.09, relwidth=0.27)
        self.TEntry2.configure(width=164)
        self.TEntry2.configure(takefocus="")
        self.TEntry2.configure(cursor="xterm")

        self.TEntry3 = ttk.Entry(self.TNotebook1_t0)
        self.TEntry3.place(relx=0.57, rely=0.22, relheight=0.09, relwidth=0.27)
        self.TEntry3.configure(width=164)
        self.TEntry3.configure(takefocus="")
        self.TEntry3.configure(cursor="xterm")

        self.TLabel5 = ttk.Label(self.TNotebook1_t0)
        self.TLabel5.place(relx=0.21, rely=0.32, height=16, width=90)
        self.TLabel5.configure(background="#d9d9d9")
        self.TLabel5.configure(foreground="#000000")
        self.TLabel5.configure(font="TkDefaultFont")
        self.TLabel5.configure(relief=FLAT)
        self.TLabel5.configure(text='''Weight (mass)''')

        self.TLabel6 = ttk.Label(self.TNotebook1_t0)
        self.TLabel6.place(relx=0.61, rely=0.32, height=16, width=126)
        self.TLabel6.configure(background="#d9d9d9")
        self.TLabel6.configure(foreground="#000000")
        self.TLabel6.configure(font="TkDefaultFont")
        self.TLabel6.configure(relief=FLAT)
        self.TLabel6.configure(text='''Dosage (mass/mass)''')

        self.Checkbutton1 = Checkbutton(self.TNotebook1_t0)
        self.Checkbutton1.place(relx=0.44, rely=0.37, relheight=0.05
                , relwidth=0.11)
        self.Checkbutton1.configure(activebackground="#d9d9d9")
        self.Checkbutton1.configure(justify=LEFT)
        self.Checkbutton1.configure(text='''Kg/M''')
        self.Checkbutton1.configure(variable=Menu_support.che63)
        self.Checkbutton1.configure(width=65)

        self.Checkbutton2 = Checkbutton(self.TNotebook1_t0)
        self.Checkbutton2.place(relx=0.44, rely=0.41, relheight=0.05
                , relwidth=0.11)
        self.Checkbutton2.configure(activebackground="#d9d9d9")
        self.Checkbutton2.configure(justify=LEFT)
        self.Checkbutton2.configure(text='''Lb/In''')
        self.Checkbutton2.configure(variable=Menu_support.che64)
        self.Checkbutton2.configure(width=66)

        self.Button1_15 = Button(self.TNotebook1_t0)
        self.Button1_15.place(relx=0.41, rely=0.49, height=46, width=107)
        self.Button1_15.configure(activebackground="#d9d9d9")
        self.Button1_15.configure(text='''Go!''')

        self.dose_liquid_Dose = Label(self.TNotebook1_t1)
        self.dose_liquid_Dose.place(relx=0.43, rely=0.05, height=35, width=82)
        self.dose_liquid_Dose.configure(activebackground="#f9f9f9")
        self.dose_liquid_Dose.configure(font=font11)
        self.dose_liquid_Dose.configure(text='''Dose''')

        self.TEntry2_10 = ttk.Entry(self.TNotebook1_t1)
        self.TEntry2_10.place(relx=0.15, rely=0.22, relheight=0.09
                , relwidth=0.27)
        self.TEntry2_10.configure(takefocus="")
        self.TEntry2_10.configure(cursor="xterm")

        self.TEntry2_11 = ttk.Entry(self.TNotebook1_t1)
        self.TEntry2_11.place(relx=0.57, rely=0.22, relheight=0.09
                , relwidth=0.27)
        self.TEntry2_11.configure(takefocus="")
        self.TEntry2_11.configure(cursor="xterm")

        self.Label3 = Label(self.TNotebook1_t1)
        self.Label3.place(relx=0.21, rely=0.32, height=18, width=88)
        self.Label3.configure(text='''Dose (mass)''')
        self.Label3.configure(width=88)

        self.Label3_12 = Label(self.TNotebook1_t1)
        self.Label3_12.place(relx=0.56, rely=0.32, height=18, width=188)
        self.Label3_12.configure(activebackground="#f9f9f9")
        self.Label3_12.configure(text='''Concentration(mass/volume)''')
        self.Label3_12.configure(width=188)

        self.Checkbutton1_13 = Checkbutton(self.TNotebook1_t1)
        self.Checkbutton1_13.place(relx=0.44, rely=0.37, relheight=0.05
                , relwidth=0.11)
        self.Checkbutton1_13.configure(activebackground="#d9d9d9")
        self.Checkbutton1_13.configure(justify=LEFT)
        self.Checkbutton1_13.configure(text='''Kg/M''')
        self.Checkbutton1_13.configure(variable=Menu_support.che63)
        self.Checkbutton1_13.configure(width=65)

        self.Checkbutton1_14 = Checkbutton(self.TNotebook1_t1)
        self.Checkbutton1_14.place(relx=0.44, rely=0.41, relheight=0.05
                , relwidth=0.11)
        self.Checkbutton1_14.configure(activebackground="#d9d9d9")
        self.Checkbutton1_14.configure(justify=LEFT)
        self.Checkbutton1_14.configure(text='''Lb/In''')
        self.Checkbutton1_14.configure(variable=Menu_support.che63)
        self.Checkbutton1_14.configure(width=65)

        self.Button1 = Button(self.TNotebook1_t1)
        self.Button1.place(relx=0.41, rely=0.49, height=46, width=107)
        self.Button1.configure(activebackground="#d9d9d9")
        self.Button1.configure(text='''Go!''')
        self.Button1.configure(width=107)

        self.TEntry1 = ttk.Entry(self.nb_t1)
        self.TEntry1.place(relx=0.11, rely=0.14, relheight=0.09, relwidth=0.27)
        self.TEntry1.configure(takefocus="")
        self.TEntry1.configure(cursor="xterm")

        self.TLabel1 = ttk.Label(self.nb_t1)
        self.TLabel1.place(relx=0.21, rely=0.23, height=16, width=35)
        self.TLabel1.configure(background="#d9d9d9")
        self.TLabel1.configure(foreground="#000000")
        self.TLabel1.configure(font="TkDefaultFont")
        self.TLabel1.configure(relief=FLAT)
        self.TLabel1.configure(text='''Input''')

        self.TLabel2 = ttk.Label(self.nb_t1)
        self.TLabel2.place(relx=0.72, rely=0.23, height=16, width=45)
        self.TLabel2.configure(background="#d9d9d9")
        self.TLabel2.configure(foreground="#000000")
        self.TLabel2.configure(font="TkDefaultFont")
        self.TLabel2.configure(relief=FLAT)
        self.TLabel2.configure(text='''Output''')

        self.TCombobox1 = ttk.Combobox(self.nb_t1)
        self.TCombobox1.place(relx=0.16, rely=0.3, relheight=0.04, relwidth=0.16)

        self.TCombobox1.configure(textvariable=Menu_support.combobox)
        self.TCombobox1.configure(takefocus="")

        self.TLabel3 = ttk.Label(self.nb_t1)
        self.TLabel3.place(relx=0.21, rely=0.35, height=16, width=39)
        self.TLabel3.configure(background="#d9d9d9")
        self.TLabel3.configure(foreground="#000000")
        self.TLabel3.configure(font="TkDefaultFont")
        self.TLabel3.configure(relief=FLAT)
        self.TLabel3.configure(text='''Unit 1''')

        self.TCombobox2 = ttk.Combobox(self.nb_t1)
        self.TCombobox2.place(relx=0.69, rely=0.3, relheight=0.04, relwidth=0.16)

        self.TCombobox2.configure(textvariable=Menu_support.combobox)
        self.TCombobox2.configure(takefocus="")

        self.TLabel4 = ttk.Label(self.nb_t1)
        self.TLabel4.place(relx=0.74, rely=0.35, height=16, width=39)
        self.TLabel4.configure(background="#d9d9d9")
        self.TLabel4.configure(foreground="#000000")
        self.TLabel4.configure(font="TkDefaultFont")
        self.TLabel4.configure(relief=FLAT)
        self.TLabel4.configure(text='''Unit 2''')

        self.TButton1 = ttk.Button(self.nb_t1)
        self.TButton1.place(relx=0.39, rely=0.47, height=55, width=133)
        self.TButton1.configure(takefocus="")
        self.TButton1.configure(text='''Convert!''')

        self.Label2 = Label(self.nb_t1)
        self.Label2.place(relx=0.62, rely=0.14, height=38, width=166)
        self.Label2.configure(activebackground="#ffffff")
        self.Label2.configure(background="#ffffff")
        self.Label2.configure(relief=RAISED)

        self.bmi_Height = Entry(self.nb_t2)
        self.bmi_Height.place(relx=0.07, rely=0.14,height=20, relwidth=0.24)
        self.bmi_Height.configure(background="white")
        self.bmi_Height.configure(font="TkFixedFont")
        self.bmi_Height.configure(selectbackground="#c4c4c4")
        self.bmi_Height.configure(textvariable=Menu_support.height)

        self.bmi_Weight = Entry(self.nb_t2)
        self.bmi_Weight.place(relx=0.07, rely=0.28,height=20, relwidth=0.24)
        self.bmi_Weight.configure(background="white")
        self.bmi_Weight.configure(font="TkFixedFont")
        self.bmi_Weight.configure(selectbackground="#c4c4c4")
        self.bmi_Weight.configure(textvariable=Menu_support.weight)

        self.bmi_Imperial = Checkbutton(self.nb_t2)
        self.bmi_Imperial.place(relx=0.07, rely=0.47, relheight=0.05
                , relwidth=0.09)
        self.bmi_Imperial.configure(activebackground="#d9d9d9")
        self.bmi_Imperial.configure(justify=LEFT)
        self.bmi_Imperial.configure(text='''Lb/In''')
        self.bmi_Imperial.configure(variable=Menu_support.che42)

        self.bmi_SI = Checkbutton(self.nb_t2)
        self.bmi_SI.place(relx=0.07, rely=0.4, relheight=0.05, relwidth=0.09)
        self.bmi_SI.configure(activebackground="#d9d9d9")
        self.bmi_SI.configure(justify=LEFT)
        self.bmi_SI.configure(text='''Kg/M''')
        self.bmi_SI.configure(variable=Menu_support.che43)

        self.bmi_Calc = Button(self.nb_t2)
        self.bmi_Calc.place(relx=0.21, rely=0.42, height=26, width=81)
        self.bmi_Calc.configure(activebackground="#d9d9d9")
        self.bmi_Calc.configure(command=Menu_support.calcBMI)
        self.bmi_Calc.configure(text='''Calculate''')

        self.str_Height = Label(self.nb_t2)
        self.str_Height.place(relx=0.15, rely=0.19, height=18, width=44)
        self.str_Height.configure(activebackground="#f9f9f9")
        self.str_Height.configure(text='''Height''')

        self.str_Weight = Label(self.nb_t2)
        self.str_Weight.place(relx=0.13, rely=0.33, height=18, width=66)
        self.str_Weight.configure(activebackground="#f9f9f9")
        self.str_Weight.configure(text='''Weight''')

        self.str_BMI = Label(self.nb_t2)
        self.str_BMI.place(relx=0.64, rely=0.23, height=18, width=86)
        self.str_BMI.configure(activebackground="#f9f9f9")
        self.str_BMI.configure(text='''BMI''')
        self.str_BMI.configure(width=86)

        self.bmi_bmi = Label(self.nb_t2)
        self.bmi_bmi.place(relx=0.66, rely=0.14, height=35, width=62)
        self.bmi_bmi.configure(activebackground="#f9f9f9")
        self.bmi_bmi.configure(font=font11)
        self.bmi_bmi.configure(text='''BMI''')

        self.Label1 = Label(self.nb_t3)
        self.Label1.place(relx=0.26, rely=0.4, height=35, width=299)
        self.Label1.configure(font=font11)
        self.Label1.configure(text='''Under Construction''')

        self.support_Email = ttk.Labelframe(self.nb_t4)
        self.support_Email.place(relx=0.02, rely=0.14, relheight=0.22
                , relwidth=0.95)
        self.support_Email.configure(relief=RAISED)
        self.support_Email.configure(text='''Email''')
        self.support_Email.configure(relief=RAISED)
        self.support_Email.configure(width=580)

        self.str_email = Label(self.support_Email)
        self.str_email.place(relx=0.02, rely=0.24, height=68, width=556, y=-11
                , h=5)
        self.str_email.configure(activebackground="#f9f9f9")
        self.str_email.configure(text='''jack.polk@mastacademyhomestead.org''')

        self.support_Github = ttk.Labelframe(self.nb_t4)
        self.support_Github.place(relx=0.02, rely=0.37, relheight=0.22
                , relwidth=0.95)
        self.support_Github.configure(relief=RAISED)
        self.support_Github.configure(text='''Github''')
        self.support_Github.configure(relief=RAISED)
        self.support_Github.configure(width=580)

        self.str_GIthub = Label(self.support_Github)
        self.str_GIthub.place(relx=0.02, rely=0.24, height=68, width=562, y=-11
                , h=5)
        self.str_GIthub.configure(activebackground="#f9f9f9")
        self.str_GIthub.configure(text='''https://github.com/decaby7e/medicalCalculator''')

        self.support_FAQ = ttk.Labelframe(self.nb_t4)
        self.support_FAQ.place(relx=0.02, rely=0.61, relheight=0.22
                , relwidth=0.95)
        self.support_FAQ.configure(relief=RAISED)
        self.support_FAQ.configure(text='''FAQ''')
        self.support_FAQ.configure(relief=RAISED)
        self.support_FAQ.configure(width=580)

        self.str_underConst = Label(self.support_FAQ)
        self.str_underConst.place(relx=0.02, rely=0.24, height=68, width=556
                , y=-11, h=5)
        self.str_underConst.configure(activebackground="#f9f9f9")
        self.str_underConst.configure(text='''Feel free to leave some at Github!''')






if __name__ == '__main__':
    vp_start_gui()



